<?php

/**
 * @file
 *  Install file for the redirector module.
 */

/**
 * Implements hook_schema().
 */
function redirector_schema() {
  $schema['redirector_rules'] = array(
    'description' => 'Stores the redirect rules.',
    'fields' => array(
      'rid' => array(
        'description' => 'The primary identifier for a rule.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'title' => array(
        'description' => 'A title for the rule.',
        'type' => 'varchar',
        'length' => 1024,
        'not null' => TRUE,
        'default' => '',
      ),
      'weight' => array(
        'description' => 'The Unix timestamp the test was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'created' => array(
        'description' => 'The Unix timestamp the test was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('rid'),
  );
  if (function_exists('redirector_get_active_components')) {
    $active_components = redirector_get_active_components();
    $all_components = redirector_get_all_components();
    foreach ($active_components as $key => $component_object) {
      if (!empty($component_object)) {
        $columns = $component_object->getStorageColumns();
        $parts = redirector_rule_parts();
        foreach ($columns as $column_name) {
          foreach ($parts as $part => $part_values) {
            $schema['redirector_rules']['fields'][$part . '_' . $column_name] = array(
              'description' => $part . ' column ' . $column_name . ' for component ' . $component_object->getTitle(),
              'type' => 'blob',
              'not null' => FALSE,
              'size' => 'big',
              'serialize' => TRUE,
            );
          }
        }
      }
    }
  }
  return $schema;
}
